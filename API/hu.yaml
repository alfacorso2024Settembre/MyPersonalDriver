openapi: 3.0.3
info: 
  title: Swagger Petstore - OpenAPI 3.0
  description: descrizione
  version: "1.0"
  
servers:
  - url: https://petstore3.swagger.io/api/v3
  
    
paths:
  /users/{id_user}/rides/{id_ride}/payments/add:
    
    post:
      parameters:
        - in: path
          name: id_user
          required: true
          schema:
            type: integer
            minimum: 1
          description: user ID
        - in: path
          name: id_ride
          required: true
          schema:
            type: integer
            minimum: 1
          description: ride ID    
      
      tags:
        - users
      summary: Aggiunge pagamento alla corsa
      
      description: Aggiunge pagamento alla corsa
      
      operationId: addUserRidePayment
      
      requestBody:
      
        description: Add payment to a ride from user
        
        content:
        
          application/json:
            schema:
              $ref: ''
          application/xml:
            schema:
              $ref: ''
        required: true
        
      responses:
      
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: ''          
            application/xml:
              schema:
                $ref: ''
                
        '400':
          description: Invalid ID supplied
          
        '404':
          description: X not found
          
        '422':
          description: Validation exception
          
            
            
  /users/{id_user}/rides/payments/view:
    get:
      parameters:
        - in: path
          name: id_user
          required: true
          schema:
            type: integer
            minimum: 1
          description: user ID
      tags:
        - users
      summary: Visualizza pagamenti
      description: Visualizza pagamenti
      operationId: viewPayments
      
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ''          
            application/xml:
              schema:
                type: array
                items:
                  $ref: ''
        '400':
          description: Invalid status value
            
  /users/{id_user}/rides/{id_ride}/payments/receive:
    get:
      tags:
        - users
      summary: ricevi pagamento
      description: ricevi pagamento
      operationId: receivePayment
      parameters:
        - in: path
          name: id_user
          required: true
          schema:
            type: integer
            minimum: 1
          description: user ID 
        - in: path
          name: id_ride
          required: true
          schema:
            type: integer
            minimum: 1
          description: ride ID    
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ''     
            application/xml:
              schema:
                type: array
                items:
                  $ref: ''
        '400':
          description: Invalid tag value
  /rides/payments/view:
    get:
      tags:
        - rides
      summary: View payments of rides
      description: View all payments
      operationId: ViewRidesPayments
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: ''          
            application/xml:
              schema:
                $ref: ''
        '400':
          description: Invalid ID supplied
        '404':
          description: Payment not found
  /rides/{id_ride}/payments/add:
    post:
      tags:
        - rides
      summary: adds payment for the ride 
      description: pays for the ride
      operationId: addRidePayment
      parameters:
        - in: path
          name: id_ride
          required: true
          schema:
            type: integer
            minimum: 1
          description: reservation ID 
            
      requestBody: 
        content:
          application/json:
            schema:
              $ref: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: ''
                
  /reservations/{id_reservation}/addDeposit:
    post:
      tags:
        - reservation
      summary: adds initial deposit 
      description: adds initial deposit to reservation
      operationId: addInitialDeposit
      parameters:
        - in: path
          name: id_reservation
          required: true
          schema:
            type: integer
            minimum: 1
          description: reservation ID 
            
      requestBody: 
        content:
          application/json:
            schema:
              $ref: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: ''
                
                
  /users/{id_user}/rides/{id_ride}/reviews/add:
    post:
      tags:
        - users
        
      parameters:
        - in: path
          name: id_user
          required: true
          schema:
            type: integer
            minimum: 1
          description: user ID 
        - in: path
          name: id_ride
          required: true
          schema:
            type: integer
            minimum: 1
          description: ride ID   
      summary: Aggiungi review
      description: Aggiungi review
      operationId: addReview
      
      requestBody: 
        content:
          application/json:
            schema:
              $ref: ''
              
      
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
  /users/{id_user}/rides/reviews/view:
    get:
      tags:
        - users
      summary: Vedi review di un utente
      description: Vedi review di un utente
      operationId: viewReview
      parameters:
        - in: path
          name: id_user
          required: true
          schema:
            type: integer
            minimum: 1
          description: user ID 
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: ''
        '400':
          description: Invalid input
        '422':
          description: Validation exception
          